{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "airbnb-typescript/base",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "prettier"
  ],
  "plugins": [
    "@typescript-eslint",
    "import",
    "prettier"
  ],
  "env": {
    "node": true,
    "es2021": true
  },
  "rules": {
    "prettier/prettier": "error",
    "class-methods-use-this": "warn",
    "no-await-in-loop": "warn",
    "@typescript-eslint/no-inferrable-types": "off",
    "@typescript-eslint/no-var-requires": "off",
    "@typescript-eslint/dot-notation": "off",
    "@typescript-eslint/no-implied-eval": "off",
    "@typescript-eslint/no-throw-literal": "off",
    "import/no-cycle": "off",
    "import/prefer-default-export": "off",
    "no-param-reassign": "off",
    "prefer-destructuring": "off",
    "no-console": "off",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "property",
        "format": [
          "strictCamelCase",
          "StrictPascalCase"
        ],
        "filter": {
          // you can expand this regex as you find more cases that require quoting that you want to allow
          "regex": "^(_|contentID|containerID|memoryLimitInMB|eventSourceARN|access_token|objectID|grant_type|client_id|client_secret|TABLE_NAME|GSI_NAME)$",
          "match": false
        }
      }
    ],
    "no-plusplus": [
      2,
      {
        "allowForLoopAfterthoughts": true
      }
    ]
  },
  "overrides": [
    {
      "files": [
        "./lambda/**/src/**/*.ts",
        "./layer/**/src/**/*.ts"
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaVersion": 2020,
        "sourceType": "module",
        "project": [
          "./tsconfig.json",
          "./lambda/**/tsconfig.json",
          "./lambda/**/tsconfig.build.json",
          "./layer/**/tsconfig.json",
          "./layer/**/tsconfig.build.json"
        ]
      },
      "rules": {
        "no-undef": "off",
        "import/no-unresolved": "off"
      }
    }
  ],
  "settings": {
    "import/resolver": {
      "node": {
        "paths": [
          "lambda/src"
        ],
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx"
        ],
        "moduleDirectory": [
          "node_modules"
        ]
      }
    }
  }
}
